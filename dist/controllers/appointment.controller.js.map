{"version":3,"sources":["../../src/controllers/appointment.controller.js"],"names":["validateBody","isUpdate","exists","withMessage","createAppointment","req","res","next","create","body","newDoc","status","json","allAppointment","find","populate","allDocs"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;kBAEe;AACXA,gBADW,0BACoB;AAAA,YAAlBC,QAAkB,uEAAP,KAAO;;AAC3B,eAAO,CACH,iBAAK,OAAL,EAAcC,MAAd,GAAuBC,WAAvB,CAAmC,kBAAnC,CADG,EAEH,iBAAK,MAAL,EAAaD,MAAb,GAAsBC,WAAtB,CAAkC,kBAAlC,CAFG,CAAP;AAIH,KANU;;AAOX;AACMC,qBARK,6BAQaC,GARb,EAQkBC,GARlB,EAQuBC,IARvB,EAQ6B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEb,sBAAYC,MAAZ,CAAmBH,IAAII,IAAvB,CAFa;;AAAA;AAE5BC,kCAF4B;AAAA,6DAGzBJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,MAArB,CAHyB;;AAAA;AAAA;AAAA;;AAKhCH;;AALgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOvC,KAfU;AAiBLM,kBAjBK,0BAiBUR,GAjBV,EAiBeC,GAjBf,EAiBoBC,IAjBpB,EAiB0B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAET,sBAAYO,IAAZ,GAAmBC,QAAnB,CAA4B,QAA5B,CAFS;;AAAA;AAEzBC,mCAFyB;AAAA,8DAGtBV,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBI,OAArB,CAHsB;;AAAA;AAAA;AAAA;;AAK7BT;;AAL6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOpC;AAxBU,C","file":"appointment.controller.js","sourcesContent":["import Client from \"../models/client.model\";\r\nimport Appointment from '../models/appointment.model'\r\nimport ApiError from \"../helpers/ApiError\";\r\nimport { body, validationResult } from 'express-validator/check';\r\nimport mongoose, { Schema } from \"mongoose\";\r\n\r\nexport default {\r\n    validateBody(isUpdate = false) {\r\n        return [\r\n            body(\"clint\").exists().withMessage(\"name is required\"),\r\n            body(\"Date\").exists().withMessage(\"name is required\")\r\n        ];\r\n    },\r\n    //create new client then new appointment\r\n    async createAppointment(req, res, next) {\r\n        try {\r\n            let newDoc = await Appointment.create(req.body);\r\n            return res.status(201).json(newDoc);\r\n        } catch (err) {\r\n            next(err)\r\n        }\r\n    },\r\n\r\n    async allAppointment(req, res, next) {\r\n        try {\r\n            let allDocs = await Appointment.find().populate('client')\r\n            return res.status(200).json(allDocs)\r\n        } catch (err) {\r\n            next(err)\r\n        }\r\n    }\r\n\r\n}\r\n"]}