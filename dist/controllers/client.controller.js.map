{"version":3,"sources":["../../src/controllers/client.controller.js"],"names":["validateBody","isUpdate","exists","withMessage","createClient","req","res","next","create","body","newClient","status","json","allClient","find","allDocs","clientDetails","clientId","params","findById","docDetails"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;kBAEe;AACXA,gBADW,0BACoB;AAAA,YAAlBC,QAAkB,uEAAP,KAAO;;AAC3B,eAAO,CACH,iBAAK,MAAL,EAAaC,MAAb,GAAsBC,WAAtB,CAAkC,kBAAlC,CADG,CAAP;AAGH,KALU;;AAMX;AACMC,gBAPK,wBAOQC,GAPR,EAOaC,GAPb,EAOkBC,IAPlB,EAOwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEL,iBAAOC,MAAP,CAAcH,IAAII,IAAlB,CAFK;;AAAA;AAEvBC,qCAFuB;AAAA,6DAGpBJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,SAArB,CAHoB;;AAAA;AAAA;AAAA;;AAK3BH;;AAL2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOlC,KAdU;AAeLM,aAfK,qBAeKR,GAfL,EAeUC,GAfV,EAeeC,IAff,EAeqB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEJ,iBAAOO,IAAP,EAFI;;AAAA;AAEpBC,mCAFoB;AAAA,8DAGjBT,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,OAArB,CAHiB;;AAAA;AAAA;AAAA;;AAKxBR;;AALwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO/B,KAtBU;AAuBLS,iBAvBK,yBAuBSX,GAvBT,EAuBcC,GAvBd,EAuBmBC,IAvBnB,EAuByB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtBU,oCAFsB,GAEXZ,IAAIa,MAAJ,CAAWD,QAFA;AAAA;AAAA,mCAGL,iBAAOE,QAAP,CAAgBF,QAAhB,CAHK;;AAAA;AAGxBG,sCAHwB;AAAA,8DAIrBd,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBQ,UAArB,CAJqB;;AAAA;AAAA;AAAA;;AAM5Bb;;AAN4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQnC;AA/BU,C","file":"client.controller.js","sourcesContent":["import Client from \"../models/client.model\";\r\nimport Appointment from '../models/appointment.model'\r\nimport ApiError from \"../helpers/ApiError\";\r\nimport { body, validationResult } from 'express-validator/check';\r\nimport mongoose, { Schema } from \"mongoose\";\r\n\r\nexport default {\r\n    validateBody(isUpdate = false) {\r\n        return [\r\n            body(\"name\").exists().withMessage(\"name is required\")\r\n        ];\r\n    },\r\n    //create new client then new appointment\r\n    async createClient(req, res, next) {\r\n        try {\r\n            let newClient = await Client.create(req.body);\r\n            return res.status(201).json(newClient);\r\n        } catch (err) {\r\n            next(err)\r\n        }\r\n    },\r\n    async allClient(req, res, next) {\r\n        try {\r\n            let allDocs = await Client.find()\r\n            return res.status(200).json(allDocs)\r\n        } catch (err) {\r\n            next(err)\r\n        }\r\n    },\r\n    async clientDetails(req, res, next) {\r\n        try {\r\n            const clientId = req.params.clientId;\r\n            let docDetails = await Client.findById(clientId);\r\n            return res.status(200).json(docDetails)\r\n        } catch (err) {\r\n            next(err)\r\n        }\r\n    },\r\n\r\n}\r\n"]}