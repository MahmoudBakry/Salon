{"version":3,"sources":["../../src/controllers/bakat.controller.js"],"names":["validateBody","isUpdate","exists","withMessage","createBaka","req","res","next","console","log","body","create","newDoc","status","json","allBakat","find","allDocs"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;kBAEe;AACXA,gBADW,0BACoB;AAAA,YAAlBC,QAAkB,uEAAP,KAAO;;AAC3B,eAAO,CACH,iBAAK,MAAL,EAAaC,MAAb,GAAsBC,WAAtB,CAAkC,kBAAlC,CADG,EAEH,iBAAK,OAAL,EAAcD,MAAd,GAAuBC,WAAvB,CAAmC,kBAAnC,CAFG,CAAP;AAIH,KANU;;AAOX;AACMC,cARK,sBAQMC,GARN,EAQWC,GARX,EAQgBC,IARhB,EAQsB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEzBC,oCAAQC,GAAR,CAAYJ,IAAIK,IAAhB;AAFyB;AAAA,mCAGN,gBAAMC,MAAN,CAAaN,IAAIK,IAAjB,CAHM;;AAAA;AAGrBE,kCAHqB;AAAA,6DAIlBN,IAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,MAArB,CAJkB;;AAAA;AAAA;AAAA;;AAMzBL;;AANyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQhC,KAhBU;AAiBLQ,YAjBK,oBAiBIV,GAjBJ,EAiBSC,GAjBT,EAiBcC,IAjBd,EAiBoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEH,gBAAMS,IAAN,EAFG;;AAAA;AAEnBC,mCAFmB;AAAA,8DAGhBX,IAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,OAArB,CAHgB;;AAAA;AAAA;AAAA;;AAKvBV;;AALuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO9B;AAxBU,C","file":"bakat.controller.js","sourcesContent":["import Client from \"../models/client.model\";\r\nimport Bakat from '../models/Bakat.model'\r\nimport ApiError from \"../helpers/ApiError\";\r\nimport { body, validationResult } from 'express-validator/check';\r\nimport mongoose, { Schema } from \"mongoose\";\r\n\r\nexport default {\r\n    validateBody(isUpdate = false) {\r\n        return [\r\n            body(\"name\").exists().withMessage(\"name is required\"),\r\n            body(\"price\").exists().withMessage(\"name is required\")\r\n        ];\r\n    },\r\n    //create new baka\r\n    async createBaka(req, res, next) {\r\n        try {\r\n            console.log(req.body)\r\n            let newDoc = await Bakat.create(req.body);\r\n            return res.status(201).json(newDoc);\r\n        } catch (err) {\r\n            next(err)\r\n        }\r\n    },\r\n    async allBakat(req, res, next) {\r\n        try {\r\n            let allDocs = await Bakat.find()\r\n            return res.status(200).json(allDocs)\r\n        } catch (err) {\r\n            next(err)\r\n        }\r\n    },\r\n\r\n}\r\n"]}