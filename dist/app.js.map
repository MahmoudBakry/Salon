{"version":3,"sources":["../src/app.js"],"names":["Promise","global","connect","mongoUrl","connection","on","console","log","err","options","key","readFileSync","cert","requestCert","rejectUnauthorized","app","serverHtps","createServer","server","Server","use","json","limit","urlencoded","extended","parameterLimit","req","res","next","apiAppUrl","protocol","get","setHeader","send","swaggerSpec","static","join","__dirname","contype","headers","includes","status","error","sendFile","Error","success","message"],"mappings":"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","file":"app.js","sourcesContent":["import express from 'express';\r\nimport http from 'http';\r\nimport https from 'https'\r\nimport fs from 'fs';\r\nimport path from \"path\";\r\nimport bodyparser from \"body-parser\";\r\nimport cors from \"cors\";\r\nimport expressValidator from \"express-validator\";\r\nimport helmet from \"helmet\";\r\nimport mongoose from \"mongoose\";\r\nimport config from \"./config\";\r\nimport router from \"./routes\";\r\n\r\n\r\nmongoose.Promise = global.Promise;\r\nmongoose.connect(config.mongoUrl);\r\n\r\n\r\nmongoose.connection.on('connected', () => {\r\n    console.log('\\x1b[32m%s\\x1b[0m', '[DB] Connected...');\r\n});\r\nmongoose.connection.on('error', err => console.log('\\x1b[31m%s\\x1b[0m', '[DB] Error : ' + err));\r\nmongoose.connection.on('disconnected', () => console.log('\\x1b[31m%s\\x1b[0m', '[DB] DisConnected...'));\r\n\r\n//certificate key\r\nvar options = {\r\n    key: fs.readFileSync('./localhost.key'),\r\n    cert: fs.readFileSync('./localhost.cert'),\r\n    requestCert: false,\r\n    rejectUnauthorized: false\r\n};\r\n\r\n\r\nconst app = express();\r\n//const server = http.Server(app);\r\nconst serverHtps = https.createServer(options, app);\r\nconst server = http.Server(app)\r\napp.use(expressValidator());\r\n\r\napp.use(bodyparser.json({ limit: '50mb' }));\r\napp.use(bodyparser.urlencoded({ limit: '50mb', extended: true, parameterLimit: 50000 }));\r\n\r\napp.use(cors());\r\napp.use(helmet());\r\n\r\n\r\napp.use((req, res, next) => {\r\n    config.apiAppUrl = req.protocol + '://' + req.get('host');\r\n    next();\r\n})\r\n\r\n\r\napp.get('/swagger.json', function (req, res) {\r\n    res.setHeader('Content-Type', 'application/json');\r\n    res.send(swaggerSpec);\r\n});\r\n\r\n\r\napp.use('/docs', express.static(path.join(__dirname, 'docs')));\r\napp.use('/uploads', express.static(path.join(__dirname, 'uploads')));\r\napp.use(express.static(path.join(__dirname, 'admin')));\r\n\r\n// Ensure Content Type\r\napp.use('/', (req, res, next) => {\r\n    let contype = req.headers['content-type'];\r\n\r\n    if (contype && !((contype.includes('application/json') || contype.includes('multipart/form-data'))))\r\n        return res.status(415).send({ error: \"Unsupported Media Type (\" + contype + \")\" });\r\n    next();\r\n});\r\n\r\n\r\n//Routes\r\napp.use('/api/v1', router);\r\n\r\napp.get(\"*\", (req, res) => {\r\n    res.sendFile(path.join(__dirname, 'admin/index.html'));\r\n });\r\n//Not Found Handler\r\napp.use((req, res, next) => {\r\n    const error = new Error(\"Not Found..!\");\r\n    error.status = 404\r\n    next(error);\r\n});\r\n\r\n//ERROR Handler\r\napp.use((err, req, res, next) => {\r\n    // if (err instanceof mongoose.CastError) {\r\n    // err.status = 404;\r\n    // err.message = `${err.model.modelName} Not Found`;\r\n    // }\r\n\r\n    const status = err.status ? err.status : 500;\r\n    res.status(status).json({\r\n        success: false,\r\n        error: err.message\r\n    });\r\n    console.log(err);\r\n});\r\n\r\n\r\n\r\nexport {\r\n    serverHtps,\r\n    server\r\n\r\n} "]}